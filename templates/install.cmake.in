# CMake build tools for custom algorithms in Varian Eclipse.
#
# Author:    Christopher M Poole <mail@christopherpoole.net>
# Institute: Dept. Ob. Gyn., University of Melbourne, Australia
# Date:      21 August 2014
#
# --- Custom Algorithm Post-installation Configuration ---
#
# This is an automation of the information provided in the Eclipse
# Algorithm API Reference Guide (B503485R01C, December 2011).
#
#   Chapter 4 -> Installing a Custom Algorithm (page 44-45)

# Build a local cache of import variables
set(CMAKE_INSTALL_PREFIX "@CMAKE_INSTALL_PREFIX@")
set(CMAKE_CURRENT_BINARY_DIR "@CMAKE_CURRENT_BINARY_DIR@")

set(SERVANT "@SERVANT@")
set(SERVANT_EXE_NAME "@SERVANT_EXE_NAME@")
set(VERSION "@VERSION@")

set(DCF_DIRECTORY "@DCF_DIRECTORY@")
set(EAAPI_BINARIES "@EAAPI_BINARIES@")
set(OPTIONS_DIRECTORY "@OPTIONS_DIRECTORY@")

set(REGISTER_SERVANT @REGISTER_SERVANT@)
set(REGISTER_ALGORITHM @REGISTER_ALGORITHM@)
set(COPY_CALCULATION_OPTIONS @COPY_CALCULATION_OPTIONS@)
set(FORCE_AGENT_RELOAD @FORCE_AGENT_RELOAD@)
set(COPY_MATERIAL_TABLE @COPY_MATERIAL_TABLE@)

# Install the EAAPI user algorithm.
file(COPY "${CMAKE_CURRENT_BINARY_DIR}/Release/${SERVANT_EXE_NAME}.exe" DESTINATION "${CMAKE_INSTALL_PREFIX}")

set(INSTALLED_EAAPI_BINARIES "")
foreach (BIN ${EAAPI_BINARIES})
    file(COPY ${BIN} DESTINATION "${CMAKE_INSTALL_PREFIX}")

    get_filename_component(INSTALLED_EAAPI_BINARY ${BIN} NAME)
    set(INSTALLED_EAAPI_BINARIES ${INSTALLED_EAAPI_BINARIES} "${CMAKE_INSTALL_PREFIX}/${INSTALLED_EAAPI_BINARY}")
endforeach(BIN)

# Generate the configuration information for the servant.
execute_process(COMMAND "${CMAKE_INSTALL_PREFIX}/${SERVANT_EXE_NAME}.exe" "generate-configuration-info"
                WORKING_DIRECTORY "${CMAKE_INSTALL_PREFIX}")

# Register the servant.
if (${REGISTER_SERVANT} MATCHES "ON")
    string(REPLACE "/" "\\" CONFIG_PATH "VCConfigurationPath=${DCF_DIRECTORY}/server/VCConfiguration.xml")
    string(REPLACE "/" "\\" SERVANT_PATH "ServantXmlPath=${CMAKE_INSTALL_PREFIX}/ServantInfo.xml")

    execute_process(COMMAND "${DCF_DIRECTORY}/server/bin/VCConfig.exe" "register-servant" ${CONFIG_PATH} ${SERVANT_PATH}
                    WORKING_DIRECTORY "${DCF_DIRECTORY}")
endif()

# Register the algorithm.
if (${REGISTER_ALGORITHM} MATCHES "ON")
    string(REPLACE "/" "\\" ALG_INFO "${CMAKE_INSTALL_PREFIX}/AlgorithmInfo.xml")
    string(REPLACE "/" "\\" INSTALLED_ALGS "${DCF_DIRECTORY}/client/InstalledAlgorithms.xml")

    execute_process(COMMAND "${DCF_DIRECTORY}/server/bin/InstallAlgorithm.exe" "install" ${ALG_INFO} ${INSTALLED_ALGS}
                    WORKING_DIRECTORY "${DCF_DIRECTORY}")
endif()

# Copy the calculation options.
if (${COPY_CALCULATION_OPTIONS} MATCHES "ON")
    set(OPTIONS_FILE "${CMAKE_SOURCE_DIR}/Options_[API]_${SERVANT}_v${VERSION}.xml")
    if (EXISTS ${OPTIONS_FILE})
        file(COPY "${OPTIONS_FILE}" DESTINATION "${OPTIONS_DIRECTORY}")
    else()
        message(FATAL_ERROR "Options file not found: ${OPTIONS_FILE}")
    endif()

    set(OPTIONS_SCHEMA "${CMAKE_SOURCE_DIR}/Options_[API]_${SERVANT}_v${VERSION}.xsd")
    if (EXISTS ${OPTIONS_SCHEMA})
        file(COPY ${OPTIONS_SCHEMA} DESTINATION ${OPTIONS_DIRECTORY})
    else()
        message(FATAL_ERROR "Options schema not found: ${OPTIONS_SCHEMA}")
    endif()
endif()

# Force DCF agents to reload the configuration.
if (${FORCE_AGENT_RELOAD} MATCHES "ON")
    execute_process(COMMAND "curl -X POST http://localhost:57580")
endif()

# Copy the physical material table files.
set(INSTALLED_MATERIAL_TABLES "")
if (${COPY_MATERIAL_TABLE} MATCHES "ON")
    file(GLOB MATERIAL_TABLES "${CMAKE_INSTALL_PREFIX}/PhysicalMaterialTableInfo*.xml")
    foreach(MATERIAL_TABLE ${MATERIAL_TABLES})
        file(COPY ${MATERIAL_TABLE} DESTINATION "${DCF_DIRECTORY}/client/PhysicalMaterialTables")
        file(REMOVE ${MATERIAL_TABLE})

        get_filename_component(INSTALLED_MATERIAL_TABLE ${MATERIAL_TABLE} NAME)
        set(INSTALLED_MATERIAL_TABLES ${INSTALLED_MATERIAL_TABLES} "${DCF_DIRECTORY}/client/PhysicalMaterialTables/${INSTALLED_MATERIAL_TABLE}")
    endforeach(MATERIAL_TABLE)
endif()

# Build a script to uninstall the algorithm.
configure_file("@CMAKE_SOURCE_DIR@/EABuilder/templates/uninstall.cmake.in" uninstall.cmake @ONLY IMMEDIATE)

